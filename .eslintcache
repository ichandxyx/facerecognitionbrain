[{"/home/chandan/Desktop/facerecognitionbrain/src/components/Navigation/Navigation.js":"1","/home/chandan/Desktop/facerecognitionbrain/src/components/Logo/Logo.js":"2","/home/chandan/Desktop/facerecognitionbrain/src/components/Rank/Rank.js":"3","/home/chandan/Desktop/facerecognitionbrain/src/App.js":"4","/home/chandan/Desktop/facerecognitionbrain/src/index.js":"5","/home/chandan/Desktop/facerecognitionbrain/src/components/ImageLinkForm/ImageLinkForm.js":"6","/home/chandan/Desktop/facerecognitionbrain/src/components/Register/Register.js":"7","/home/chandan/Desktop/facerecognitionbrain/src/components/Signin/Signin.js":"8","/home/chandan/Desktop/facerecognitionbrain/src/components/FaceRecognition/FaceRecognition.js":"9"},{"size":644,"mtime":1614646052651,"results":"10","hashOfConfig":"11"},{"size":416,"mtime":1607631205964,"results":"12","hashOfConfig":"11"},{"size":249,"mtime":1615615324278,"results":"13","hashOfConfig":"11"},{"size":3716,"mtime":1615619362677,"results":"14","hashOfConfig":"11"},{"size":523,"mtime":1615438161279,"results":"15","hashOfConfig":"11"},{"size":598,"mtime":1614640986158,"results":"16","hashOfConfig":"11"},{"size":2544,"mtime":1615547681452,"results":"17","hashOfConfig":"11"},{"size":2377,"mtime":1615618853048,"results":"18","hashOfConfig":"11"},{"size":465,"mtime":1614471067025,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2a8o3a",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/chandan/Desktop/facerecognitionbrain/src/components/Navigation/Navigation.js",[],"/home/chandan/Desktop/facerecognitionbrain/src/components/Logo/Logo.js",[],"/home/chandan/Desktop/facerecognitionbrain/src/components/Rank/Rank.js",[],"/home/chandan/Desktop/facerecognitionbrain/src/App.js",["39","40"],"import React , {Component} from 'react';\nimport Particles from 'react-particles-js';import Navigation from './components/Navigation/Navigation.js';\nimport Clarifai from 'clarifai';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin.js';\nimport Register from './components/Register/Register.js';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '899fc8a19c7d4d1fb836f3bc96c53365'\n});\n\nconst particlesOptions={\n /* particles: {\n    value:60,\n    density:{\n      enable:true,\n      value_area: 800\n\n    }\n  }*/\n}\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input:'',\n      imageUrl:'',\n      box: {},\n      route:'signin',\n      isSignedIn:false,\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        entries:0,\n        joined:''\n      }\n    }\n  }\n\nloadUser=(data)=>{\n  this.setState({user:{\n    id:data.id,\n    name:data.name,\n    emai:data.email,\n    entries:data.entries,\n    joined:data.joined\n  }})\n}\nFaceLocation=(data)=>{\n  const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image=document.getElementById('inputimage');\n  const width=Number(image.width);\n  const height=Number(image.height);\n  return {\n    leftcol:clarifaiFace.left_col * width,\n    topRow:clarifaiFace.top_row * height,\n    rightcol:width-(clarifaiFace.right_col*width),\n    bottomRow:height-(clarifaiFace.bottom_row*height)\n  }\n\n}\n  displayFaceBox=(box)=>{\n    console.log(box);\n    this.setState({box:box});\n  }\n\n  onInputChange=(event)=>{\n    this.setState({input:event.target.value});\n  }\n\n\n  onButtonSubmit=()=>{\n    this.setState({imageUrl: this.state.input});\n    app.models\n    .predict(\n        Clarifai.FACE_DETECT_MODEL ,\n        this.state.input\n      )\n    .then(response => {\n      console.log(this.state.user.id);\n      if(response){\n        fetch('http://localhost:3000/image',{\n          method:'put',\n          headers:{'Content-Type':'application/json'},\n          body:JSON.stringify({\n            id:this.state.user.id\n\n          })\n        })\n        .then(response=>response.json())\n        .then(count=>{\n                        this.setState(Object.assign(this.state.user, { entries: count}))\n        })\n      }\n      this.displayFaceBox(this.FaceLocation(response))\n    })\n    .catch(err=> console.log(err));\n  \n}\n  onRouteChange=(route)=>{\n    if(route==='signout'){\n      this.setState({isSignedIn:false})\n    }\n    else if(route==='home'){\n    this.setState({isSignedIn:true});\n    }\n    this.setState({route:route});\n  }\n\n  render(){\n    const {isSignedIn, imageUrl, route, box,name,entries}= this.state;\n  return (\n    <div className=\"App\">\n        {/*<Particles className='particles'\n                    params={particlesOptions} \n        />*/}\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n\n        { route==='home'\n          ? <div>\n              <Logo/>\n              <Rank name={name} entries={entries}/>\n              <ImageLinkForm \n               onInputChange={this.onInputChange}\n               onButtonSubmit={this.onButtonSubmit}\n              /> \n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n          : (\n            route==='signin'\n            ?<Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n          \n          \n      }\n    </div>\n  );\n}\n}\n\nexport default App;\n","/home/chandan/Desktop/facerecognitionbrain/src/index.js",[],"/home/chandan/Desktop/facerecognitionbrain/src/components/ImageLinkForm/ImageLinkForm.js",[],"/home/chandan/Desktop/facerecognitionbrain/src/components/Register/Register.js",[],"/home/chandan/Desktop/facerecognitionbrain/src/components/Signin/Signin.js",[],"/home/chandan/Desktop/facerecognitionbrain/src/components/FaceRecognition/FaceRecognition.js",[],{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":17},{"ruleId":"41","severity":1,"message":"45","line":15,"column":7,"nodeType":"43","messageId":"44","endLine":15,"endColumn":23},"no-unused-vars","'Particles' is defined but never used.","Identifier","unusedVar","'particlesOptions' is assigned a value but never used."]